"""
Minecalc
    This application will generate a keypad that can be used to enter numbers and preform mathmatical operations 
(add, multiply, and divide) the glass blocks input numbers starting in the uper left 1 to 9 in the lower right
and 0 below in the middle. The lower right stone button is the decimal point and the 3 stone buttons the the right
are addition, multiplication, and division in that order.  The gold block is the enter key and the TNT will clear the 
screen. The calculator does not recognize order of operations, it will only evaluate from left to right and does not
support negative numbers.
created by Merrick Makowski and Connor Dalrymple
"""
j = 1
k = 20
keypad = [
    [j,0,k,0,46,0,j,0,j,0,j],
    [0,0,0,0,0],
    [k,0,k,0,k,0,41],
    [0,0,0,0,0],
    [k,0,k,0,k],
    [0,0,0,0,0],
    [k,0,k,0,k]]
num = {
    ".":[
        [0,j,0],
        [0,0,0],
        [0,0,0],
        [0,0,0],
        [0,0,0]],
    "/":[
        [0,j,0],
        [0,0,0],
        [j,j,j],
        [0,0,0],
        [0,j,0]],
    "-":[
        [0,0,0],
        [0,0,0],
        [j,j,j],
        [0,0,0],
        [0,0,0]],
    "1":[
        [0,0,j],
        [0,0,j],
        [0,0,j],
        [0,0,j],
        [0,0,j]],
    "2":[
        [j,j,j],
        [j,0,0],
        [j,j,j],
        [0,0,j],
        [j,j,j]],
    "3":[
        [j,j,j],
        [0,0,j],
        [j,j,j],
        [0,0,j],
        [j,j,j]],
    "4":[
        [0,0,j],
        [0,0,j],
        [j,j,j],
        [j,0,j],
        [j,0,j]],
    "5":[
        [j,j,j],
        [0,0,j],
        [j,j,j],
        [j,0,0],
        [j,j,j]],
    "6":[
        [j,j,j],
        [j,0,j],
        [j,j,j],
        [j,0,0],
        [j,j,j]],
    "7":[
        [0,0,j],
        [0,0,j],
        [0,0,j],
        [0,0,j],
        [j,j,j]],
    "8":[
        [j,j,j],
        [j,0,j],
        [j,j,j],
        [j,0,j],
        [j,j,j]],
    "9":[
        [j,j,j],
        [0,0,j],
        [j,j,j],
        [j,0,j],
        [j,j,j]],
    "0":[
        [j,j,j],
        [j,0,j],
        [j,0,j],
        [j,0,j],
        [j,j,j]],
    "+":[
        [0,0,0],
        [0,j,0],
        [j,j,j],
        [0,j,0],
        [0,0,0]],
    "x":[
        [0,0,0],
        [j,0,j],
        [0,j,0],
        [j,0,j],
        [0,0,0]]
    }
from mcpi.minecraft import Minecraft
mc = Minecraft.create()
import time

pos = mc.player.getTilePos()
origx, origy, layer = pos.x, pos.y, pos.z

def generate(sx,sy,sz,sprite):
    x = sx
    y = sy
    z = sz
    for row in sprite:
        for block in row:
            mc.setBlock(x, y, z, block)
            x += 1
        y += 1
        x = sx
generate (origx, origy, layer, keypad)
value = "10"
screen = []
def write(x = 'c'):
    global screen
    if x != 'c':
        screen.append(x)
    if x == 'c':
        mc.setBlocks(origx - 12, origy, layer - 8, origx + 100, origy + 5, layer - 8,0)
    x = 0
    if x != 'c':
        for i in screen:
            x += 4
            generate(origx - 12 + x, origy, layer - 8, num[i])
while True:

#this section of code is used to read which key you have pressed
    time.sleep(.5)
    try:
        for x in mc.events.pollBlockHits():
            key = x.pos
            if origx==key.x:

                if origy==key.y - 6:
                    value = "1"
                if origy==key.y - 4:
                    value = "4"
                if origy==key.y - 2:
                    value = "7"
                if origy==key.y:
                    value = "."
            elif origx ==key.x - 2:
                if origy==key.y:
                    value = "0"
                if origy==key.y - 6:
                    value = "2"
                if origy==key.y - 4:
                    value = "5"
                if origy==key.y - 2:
                    value = "8"
            elif origx==key.x - 4:
                if origy==key.y:
                    value = "c"
                if origy==key.y - 6:
                    value = "3"
                if origy==key.y - 4:
                    value = "6"
                if origy==key.y - 2:
                    value = "9"
            elif origx==key.x - 6:
                if origy==key.y - 2:
                    value = "e"
                if origy==key.y:
                    value = "+"
            elif origx==key.x - 8:
                if origy==key.y:
                    value = "x"
            elif origx==key.x - 10:
                if origy==key.y:
                    value = "/"
                    
    except:
        value = "10"
    if value == "c":
        screen = []
        write()

    if value in ['1','2','3','4','5','6','7','8','9','0','+','x','/','.']:
        write(value)
    if value == 'e':
        numbers = []
        tmp = ''
        out = ''
        print(screen)
        for value in screen:
            if value in ['1','2','3','4','5','6','7','8','9','0','.']:
                tmp = tmp + value
            if value == '+':
                numbers.append(tmp)
                numbers.append('+')
                tmp = ''
            if value == 'x':
                numbers.append(tmp)
                numbers.append('x')
                tmp = ''
            if value == '/':
                numbers.append(tmp)
                numbers.append('/')
                tmp = ''
        numbers.append(tmp)
        try:
            
            while True:
                if numbers[1] == '+':
                    print(numbers)
                    numbers[0] = str(int(numbers[0]) + int(numbers[2]))
                    try:
                        newnum = []
                        newnum.append(numbers[0])
                        x = 3
                        while True:
                            newnum.append(numbers[x])
                            x += 1
                    except:
                        numbers = newnum
                if numbers[1] == '/':
                    print(numbers)
                    numbers[0] = str(float(numbers[0]) / float(numbers[2]))
                    try:
                        newnum = []
                        newnum.append(numbers[0])
                        x = 3
                        while True:
                            newnum.append(numbers[x])
                            x += 1
                    except:
                        numbers = newnum
                if numbers[1] == 'x':
                    print(numbers)
                    numbers[0] = str(int(numbers[0]) * int(numbers[2]))
                    try:
                        newnum = []
                        newnum.append(numbers[0])
                        x = 3
                        while True:
                            newnum.append(numbers[x])
                            x += 1
                    except:
                        numbers = newnum
        except:
            print('donely')
        print(numbers)
        screen = []
        for x in numbers:
            for y in x:
                screen.append(y)
        write()
            

    
            
        
        
        
    #this resets the value
    if value != "10":
        print(value)
    mc.events.clearAll()
    value = "10"
    
